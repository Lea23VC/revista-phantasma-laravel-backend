name: Production Deployment
on:
  push:
    branches:
      - "test"

########################################################################
# ðŸš¨ WARNING: You must set the following secrets in GitHub:
#
# - DEPLOYMENT_SSH_PRIVATE_KEY
# - DEPLOYMENT_SSH_HOSTNAME
# - DB_ROOT_PASSWORD
# - DB_NAME
# - DB_USERNAME
# - DB_PASSWORD
# - ENV_FILE_BASE64
#
# Ensure these secrets match the environment you're deploying to.
# https://github.com/<your-organization>/<your-repo>/settings/environments
########################################################################

# ðŸ‘‡ Set these variables to match your application needs. Most of them should work great by default.
env:
  DEPLOYMENT_URL_HOSTNAME: dashboard.phantasma.cl
  DEPLOYMENT_URL: https://dashboard.phantasma.cl
  DOCKER_COMPOSE_CMD: docker compose -f docker-compose.yml -f docker-compose.ci.yml

jobs:
  docker-publish:
    runs-on: ubuntu-22.04
    environment:
      name: ${{ inputs.environment }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Restore composer cache (if available)
        id: composer-vendor-restore
        uses: actions/cache/restore@v3
        with:
          path: vendor/
          key: ${{ runner.os }}-composer-vendor-${{ hashFiles('composer.lock') }}

      - if: ${{ steps.composer-vendor-restore.outputs.cache-hit != 'true' }}
        name: List the composer packages
        continue-on-error: true
        run: |
          $DOCKER_COMPOSE_CMD \
          run \
          php \
          composer show --locked

      - if: ${{ steps.composer-vendor-restore.outputs.cache-hit != 'true' }}
        name: Install Composer dependencies
        run: |
          $DOCKER_COMPOSE_CMD \
          run \
          php \
          composer install --optimize-autoloader --no-interaction --no-progress --no-ansi

      - name: Set env file
        run: |
          echo $BASE_64_SECRET | base64 -d > .env
          chmod 600 .env
        env:
          BASE_64_SECRET: ${{ secrets.ENV_FILE_BASE64 }}

      - name: docker-build-action
        uses: serversideup/github-action-docker-build@v5
        with:
          tags: |
            ghcr.io/Lea23VC/revista-phantasma-laravel-backend:feat-install-spin
            ghcr.io/Lea23VC/revista-phantasma-laravel-backend:latest
          dockerfile: "${{ inputs.dockerfile }}"
          registry: "ghcr.io"
          registry-username: "${{ github.actor }}"
          registry-token: "${{ secrets.GITHUB_TOKEN }}"
          platforms: "${{ inputs.platforms }}"
          target: "${{ inputs.target }}"

      - name: Normalize Docker tags a
        run: |
          DOCKER_TAGS=$(echo "ghcr.io/${{ github.repository }}:${{ github.ref_name }}" | tr '[:upper:]' '[:lower:]')
          echo "DOCKER_TAGS=$DOCKER_TAGS" >> $GITHUB_ENV
