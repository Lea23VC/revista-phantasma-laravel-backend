service: revista-phantasma-backend

provider:
    name: aws
    memorySize: 2048
    region: us-east-1
    stage: ${opt:stage, 'dev'}  # Default to 'dev' if not specified
    environment:
        APP_ENV: ${self:provider.stage}
        QUEUE_CONNECTION: sqs
        SQS_QUEUE: ${construct:jobs.queueUrl}
        APP_NAME: "Revista Phantasma"
        APP_KEY: ${ssm:/revista_phantasma/${self:provider.stage}/APP_KEY}
        APP_DEBUG: ${ssm:/revista_phantasma/${self:provider.stage}/APP_DEBUG}
        APP_URL: ${ssm:/revista_phantasma/${self:provider.stage}/APP_URL}
        LOG_CHANNEL: ${ssm:/revista_phantasma/${self:provider.stage}/LOG_CHANNEL}
        LOG_DEPRECATIONS_CHANNEL: ${ssm:/revista_phantasma/${self:provider.stage}/LOG_DEPRECATIONS_CHANNEL}
        LOG_LEVEL: ${ssm:/revista_phantasma/${self:provider.stage}/LOG_LEVEL}
        DB_CONNECTION: ${ssm:/revista_phantasma/${self:provider.stage}/DB_CONNECTION}
        DB_HOST: ${ssm:/revista_phantasma/${self:provider.stage}/DB_HOST}
        DB_PORT: ${ssm:/revista_phantasma/${self:provider.stage}/DB_PORT}
        DB_DATABASE: ${ssm:/revista_phantasma/${self:provider.stage}/DB_DATABASE}
        DB_USERNAME: ${ssm:/revista_phantasma/${self:provider.stage}/DB_USERNAME}
        DB_PASSWORD: ${ssm:/revista_phantasma/${self:provider.stage}/DB_PASSWORD}
        BROADCAST_DRIVER: ${ssm:/revista_phantasma/${self:provider.stage}/BROADCAST_DRIVER}
        CACHE_DRIVER: ${ssm:/revista_phantasma/${self:provider.stage}/CACHE_DRIVER}
        FILESYSTEM_DISK: s3
        SESSION_DRIVER: ${ssm:/revista_phantasma/${self:provider.stage}/SESSION_DRIVER}
        SESSION_LIFETIME: ${ssm:/revista_phantasma/${self:provider.stage}/SESSION_LIFETIME}
        REDIS_HOST: ${ssm:/revista_phantasma/${self:provider.stage}/REDIS_HOST}
        REDIS_PASSWORD: ${ssm:/revista_phantasma/${self:provider.stage}/REDIS_PASSWORD}
        REDIS_PORT: ${ssm:/revista_phantasma/${self:provider.stage}/REDIS_PORT}
        MAIL_MAILER: ${ssm:/revista_phantasma/${self:provider.stage}/MAIL_MAILER}
        MAIL_HOST: ${ssm:/revista_phantasma/${self:provider.stage}/MAIL_HOST}
        MAIL_PORT: ${ssm:/revista_phantasma/${self:provider.stage}/MAIL_PORT}
        MAIL_USERNAME: ${ssm:/revista_phantasma/${self:provider.stage}/MAIL_USERNAME}
        MAIL_PASSWORD: ${ssm:/revista_phantasma/${self:provider.stage}/MAIL_PASSWORD}
        MAIL_ENCRYPTION: ${ssm:/revista_phantasma/${self:provider.stage}/MAIL_ENCRYPTION}
        MAIL_FROM_ADDRESS: ${ssm:/revista_phantasma/${self:provider.stage}/MAIL_FROM_ADDRESS}
        MAIL_FROM_NAME: ${ssm:/revista_phantasma/${self:provider.stage}/MAIL_FROM_NAME}
        AWS_BUCKET: ${construct:media.bucketName}
        AWS_USE_PATH_STYLE_ENDPOINT: false
        PUSHER_PORT: ${ssm:/revista_phantasma/${self:provider.stage}/PUSHER_PORT}
        PUSHER_SCHEME: ${ssm:/revista_phantasma/${self:provider.stage}/PUSHER_SCHEME}
        PUSHER_APP_CLUSTER: ${ssm:/revista_phantasma/${self:provider.stage}/PUSHER_APP_CLUSTER}
        VITE_APP_NAME: ${ssm:/revista_phantasma/${self:provider.stage}/VITE_APP_NAME}
        VITE_PUSHER_APP_KEY: ${ssm:/revista_phantasma/${self:provider.stage}/VITE_PUSHER_APP_KEY}
        VITE_PUSHER_HOST: ${ssm:/revista_phantasma/${self:provider.stage}/VITE_PUSHER_HOST}
        VITE_PUSHER_PORT: ${ssm:/revista_phantasma/${self:provider.stage}/VITE_PUSHER_PORT}
        VITE_PUSHER_SCHEME: ${ssm:/revista_phantasma/${self:provider.stage}/VITE_PUSHER_SCHEME}
        VITE_PUSHER_APP_CLUSTER: ${ssm:/revista_phantasma/${self:provider.stage}/VITE_PUSHER_APP_CLUSTER}
        # ASSET_URL: ${construct:website.url}
        OWNER: ${ssm:/revista_phantasma/${self:provider.stage}/OWNER}
        REPO_NAME: ${ssm:/revista_phantasma/${self:provider.stage}/REPO_NAME}
        FRONTEND_URL: ${construct:website.url}
        # ASSET URL from
        ANALYTICS_PROPERTY_ID: ${ssm:/revista_phantasma/${self:provider.stage}/ANALYTICS_PROPERTY_ID}
        DYNAMODB_CACHE_TABLE: ${self:service}-${self:provider.stage}-cache

package:
  patterns:
    - '!node_modules/**'
    - '!public/storage'
    - '!resources/assets/**'
    - '!storage/**'
    - '!tests/**'
    - '!.infrastructure/**'

functions:
  web:
    handler: public/index.php
    runtime: php-83-fpm
    timeout: 28
    events:
      - httpApi: '*'
      - schedule:
          rate: rate(5 minutes)
          input:
            warmer: true
    layers:
      - ${bref-extra:gd-php-83}
      - ${bref-extra:gmp-php-83}

  artisan:
    handler: artisan
    runtime: php-83-console
    timeout: 720
    layers:
      - ${bref-extra:gd-php-83}
      - ${bref-extra:gmp-php-83}
    events:
      - schedule:
          rate: rate(1 minute)
          input: '"schedule:run"'

constructs:
  website:
    type: server-side-website
    assets:
      '/js/*': public/js
      '/css/*': public/css
      '/favicon.ico': public/favicon.ico
      '/robots.txt': public/robots.txt
      '/vendor/telescope/*': public/vendor/telescope
      '/images/*': public/images
    domain: '${self:custom.domain}'
    certificate: '${ssm:/revista_phantasma/${self:provider.stage}/ACM_CERT_ARN}'

  jobs:
    type: queue
    worker:
      handler: Bref\LaravelBridge\Queue\QueueHandler
      runtime: php-83
      timeout: 60
      layers:
        - ${bref-extra:gd-php-83}
        - ${bref-extra:gmp-php-83}

  media:
    type: storage

custom:
  domain: ${opt:domain, 'test.phantasma.cl'} # Use CLI option --domain to override the domain, defaults to test.phantasma.cl

plugins:
  - ./vendor/bref/bref
  - serverless-lift
  - ./vendor/bref/extra-php-extensions
  - serverless-plugin-warmup

resources:
  Resources:
    CacheTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:service}-${self:provider.stage}-cache
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        TimeToLiveSpecification:
          AttributeName: ttl
          Enabled: true
        KeySchema:
          - AttributeName: id
            KeyType: HASH
